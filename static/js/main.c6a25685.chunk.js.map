{"version":3,"sources":["components/tableheader.jsx","components/tablebody.jsx","components/pagination.jsx","components/countrytable.jsx","components/utilities/paginate.js","components/mainpage.jsx","components/details.jsx","App.js","reportWebVitals.js","index.js"],"names":["TableHeader","state","headerNames","onSort","this","props","map","column","onClick","toLowerCase","Component","TableBody","countrydata","flag","name","region","population","countries","item","src","className","to","Pagination","countriesCount","pageSize","currentpage","onChangePage","pageCount","Math","ceil","pageArr","_","range","page","CountryTable","sortedColumn","order","setState","handleSort","a","axios","get","data","length","paginatedCountries","itemsArray","startingIdx","slice","take","value","Paginate","orderBy","Mainpage","style","marginLeft","Details","capital","subregion","demonym","languages","timezones","currency","match","params","currencies","console","log","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6a25685.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './css/tablestyle.css';\n\n\nclass TableHeader extends Component{\n    /* This page returns the headers for the country data table. Each header (sans maps) has an\n    onClick function, 'onSort', that sorts the table by the selected column. onSort takes the \n    lowercase value as an argument to determine which column will be used to sort the table*/\n    state = {\n        headerNames: ['Flag', 'Name', 'Region', 'Population']\n    }\n\n    render(){\n        const {onSort} = this.props;\n        return (\n            <thead>\n                <tr>\n                    {this.state.headerNames.map(column => <th key={column} onClick={() => onSort(column.toLowerCase())}>{column}</th>)}\n                </tr>\n            </thead>\n        );\n    }\n}\n\nexport default TableHeader;","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\n\nimport './css/tablestyle.css';\n\nclass TableBody extends Component{\n    /* This function takes in the array of country data as props from the 'countrytable' component\n    and uses the map function to dynamically render each row. The name cell contains a link that\n    redirects the user to a page with further details on the selected country */\n\n    state = {\n        countrydata : [\n            {flag:'https://cdn.countryflags.com/thumbs/colombia/flag-800.png', name:'Colombia',region:'Americas',population:'48759958'},\n            {flag:'https://i.pinimg.com/564x/e0/bf/96/e0bf963a1400673fc43a8c4c2e51c716.jpg', name:'France',region:'Europe',population:'66710000'},\n            {flag:'https://cdn.britannica.com/41/4041-004-A06CBD63/Flag-Vietnam.jpg', name:'Vietnam',region:'Asia',population:'92700000'},\n            {flag:'https://www.worldatlas.com/r/w960-q80/upload/68/b6/f5/untitled-design-323.jpg', name:'Cuba',region:'Americas',population:'11239004'}]\n    }\n\n    render(){\n        const {countries} = this.props;\n        return (\n            <tbody>\n                {countries.map(item => <tr key={item.name}><td><img src={item.flag} className='imageclass'/></td><td><Link to={`/${item.name}`}>{item.name}</Link></td><td>{item.region}</td><td>{item.population}</td></tr>)}\n            </tbody>\n        );\n    }\n\n}\n\nexport default TableBody;","import React from 'react';\nimport _ from 'lodash';\n\nconst Pagination = (props) => {\n    /* This stateless function component is responsible for returning the pagination bar\n    rendered at the bottom of the page. It takes in the number of rows (countriesCount)\n    and the page size to determine the number of pages to render. It also takes in the\n    current page to ensure that the selected page has a highlighted pagination number */\n    const { countriesCount, pageSize, currentpage, onChangePage } = props\n\n    // Get the number of pages\n    const pageCount = Math.ceil(countriesCount/pageSize);\n\n    // There is no need for the pagination bar if there is only 1 page\n    if (pageCount === 1) return null;\n\n    // Use lodash function 'range' to return the range of numbers to be rendered in the pagination bar\n    const pageArr = _.range(1, pageCount+1);\n\n    return (\n        /* We will use the map function to dynamically render the numbers used for pagination.\n        We will use bootstrap classes for the styling of the pagination bar. In each list item\n        we will select whether the li has the 'page-item active' class or not based on whether \n        the selected li number matches the current page. Each li has a link with an onClick event\n        that calls the onChangePage function. The onChangePage function takes in the page number\n        as an argument and sets the current page to the clicked page */\n        <nav>\n        <ul className=\"pagination\">\n            {pageArr.map(page => \n                <li key={page} className={page === currentpage ? \"page-item active\" : \"page-item\"}>\n                    <a className=\"page-link\" onClick={() => onChangePage(page)}>{page}</a>\n                </li>)}\n        </ul>\n    </nav>\n    );\n}\n\nexport default Pagination;","import React, { Component } from 'react';\nimport TableHeader from './tableheader';\nimport TableBody from './tablebody';\nimport Pagination from './pagination';\nimport axios from 'axios';\nimport './css/tablestyle.css';\nimport { Paginate } from './utilities/paginate';\nimport _ from 'lodash';\n\nclass CountryTable extends Component{\n    /*The state contains four properties:\n     an array to store the data returned from API (countries), \n     the number of rows in a single page (pageSize), \n     the current page that has a default value of 1 \n     and a sortColumn object used for sorting by each column*/\n    state = {\n        countries: [],\n        pageSize: 15,\n        currentpage: 1,\n        sortedColumn: {column:'Name', order:'asc'}\n    };\n    /* We will extract the API data using the Axios library & add the value of our data to countries array */\n    async componentDidMount(){\n        const {data:countries} = await axios.get('https://restcountries.eu/rest/v2/all');\n        this.setState({ countries });\n      }\n    /* OnChangePage takes in the page we're on as an argument \n    and sets it to the current page */\n    onChangePage = (page) => {\n        this.setState({currentpage: page})\n    }\n    /* handleSort takes in the selected column as an argument,\n    if the same column is selected twice then we reverse the order (asc=>desc or desc=>asc) \n    otherwise the column property of sortedColumn is set to the selected column and order to asc */\n    handleSort = (column) => {\n        const sortedColumn = {...this.state.sortedColumn};\n        if (sortedColumn.column === column)\n            sortedColumn.order = (sortedColumn.order === 'asc') ? 'desc' : 'asc';\n        else {\n            sortedColumn.column = column;\n            sortedColumn.order = 'asc';\n        }\n        this.setState({ sortedColumn });\n    }\n\n    render(){\n        const { length:countriesCount} = this.state.countries;\n\n        const { countries, pageSize, currentpage, sortedColumn } = this.state;\n\n        // I used lodash function 'orderBy' to order the data by the desired column & order stored in sortedColumn object\n        const sortedCountries =  _.orderBy(countries, [sortedColumn.column], [sortedColumn.order])\n\n        // Call the Paginate function to return the desired page\n        const paginatedCountries = Paginate(sortedCountries, currentpage, pageSize)\n\n        return (\n            <div>\n            <table className='table m-2'>\n                <TableHeader onSort = {this.handleSort}/>\n                <TableBody countries={paginatedCountries}/>\n            </table>\n            <Pagination countriesCount={countriesCount} pageSize={pageSize} currentpage={currentpage} onChangePage={this.onChangePage}/>\n            </div>\n        );\n    }\n}\n\nexport default CountryTable;","import _ from 'lodash';\n\nexport function Paginate(itemsArray, currentpage, pageSize){\n    /* This function is responsible for paginating the data. It takes in the data array and trims\n    it using lodash functions. The startingIdx is used to determine where the returned array should\n    start from, where the Slice method will remove the portion of the array prior to the index. The\n    take method will trim the array to the desired length based on pageSize */\n    const startingIdx = (currentpage - 1) * pageSize;\n    const lodashArray  = _(itemsArray)\n    return lodashArray.slice(startingIdx).take(pageSize).value();\n}","import React, { Component } from \"react\";\nimport CountryTable from './countrytable';\nimport './css/tablestyle.css';\n\nclass Mainpage extends Component{\n\n\n    render(){\n        return (\n            <div>\n                <h1 style={{marginLeft: 20}}>List of Countries, Autonomous Regions and Territories</h1>\n                <div className=\"col\"><CountryTable/></div>\n            </div>\n            )\n    }\n}\n\nexport default Mainpage;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './css/tablestyle.css';\n\nclass Details extends Component{\n    /* This function extracts the specific data for the selected country. It uses the name\n    parameter to extract data from the API that is specific to the desired country. It then \n    saves particular data to the state and renders it out in the data table */\n    state = {\n        countrydata: [],\n        name: '',\n        capital: '',\n        region: '',\n        subregion: '',\n        population: '',\n        demonym: '',\n        flag: '',\n        languages: '',\n        timezones: '',\n        currency: ''\n    }\n    async componentDidMount(){\n        const { match } = this.props;\n        const {data:countrydata} = await axios.get(`https://restcountries.eu/rest/v2/name/${match.params.name}`);\n        //this.setState({ countrydata });\n        const name = match.params.name;\n        const capital = countrydata[0].capital;\n        const region = countrydata[0].region;\n        const subregion = countrydata[0].subregion;\n        const population = countrydata[0].population;\n        const demonym = countrydata[0].demonym;\n        const flag = countrydata[0].flag;\n        const timezones = countrydata[0].timezones;\n        const languages = countrydata[0].languages[0].name;\n        const currency = countrydata[0].currencies[0].name;\n        this.setState({ capital, countrydata, region, subregion, population, demonym, flag, languages, name, timezones, currency });\n        console.log(timezones);\n      }\n\n    render(){\n        const { countrydata, capital, region, subregion, population, demonym, flag, languages, name, timezones, currency } = this.state;\n        return (\n            <div> \n                <div className='header'><img src={flag} className='imagedetailclass'/> <h1 style={{marginLeft: 200}}> {name}</h1></div>\n                <table className='table m-2'>\n                    <tr><td className='details'>Capital</td><td>{capital}</td></tr>\n                    <tr><td className='details'>Region</td><td>{region}</td></tr>\n                    <tr><td className='details'>Subregion</td><td>{subregion}</td></tr>\n                    <tr><td className='details'>Population</td><td>{population}</td></tr>\n                    <tr><td className='details'>Demonym</td><td>{demonym}</td></tr>\n                    <tr><td className='details'>Language(s)</td><td>{languages}</td></tr>\n                    <tr><td className='details'>Timezone(s)</td><td>{timezones}</td></tr>\n                    <tr><td className='details'>Currency</td><td>{currency}</td></tr>\n                </table>      \n            </div>\n        );\n    }\n}\n\nexport default Details;","import React, { Component } from 'react'; \nimport './App.css';\nimport Mainpage from './components/mainpage';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport Details from './components/details';\n\nclass App extends Component {\n\n  render(){\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route path='/' component={Mainpage}/>\n          <Route path='/:name' component={Details} />\n        </Switch>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}